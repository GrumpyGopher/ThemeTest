name: muOS Complete Archive Manager Theme Releases

on:
  push:
    branches: ["main"]
  workflow_dispatch:
    
concurrency: 
  group: release

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Zip all theme directories
      - name: Zip Legacy directories
        run: |
          mkdir -p /tmp/release
          for dir in 2502.0_Pixie/*/; do
            [ -d "$dir" ] || continue
            zip_name=$(basename "$dir")
            zip_path="/tmp/release/${zip_name}.muxthm"
            echo "Zipping contents of $dir into $zip_path"
            (cd "$dir" && zip -qq -r "$zip_path" ./*)
          done

      - name: List archives
        run: ls -l /tmp/release

      # Clean up old releases if needed
      - name: Delete releases
        uses: sgpublic/delete-release-action@v1.1
        with:
          release-drop: true
          release-keep-count: -1
          release-drop-tag: true
          pre-release-drop: true
          pre-release-keep-count: -1
          pre-release-drop-tag: true
          draft-drop: true
          draft-drop-count: -1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Set release tag based on timestamp
      - name: Get release name for artifacts
        id: date
        run: echo "date=$(date +'%Y-%m-%d_%H%M')" >> $GITHUB_OUTPUT

      # Create release with all .muxthm files
      - name: Create GitHub Release
        run: |
          gh release create "${{ steps.date.outputs.date }}" \
            --title "All Themes" \
            --notes "Automated release of all themes."

          for f in /tmp/release/*.muxthm; do
            gh release upload "${{ steps.date.outputs.date }}" "$f" --name "$(basename "$f")" --clobber
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Release Info
        id: info
        run: |
          echo "Published themes: ${{steps.date.outputs.date}} to: https://github.com/${{ steps.env.outputs.RELEASE_ORG}}/${{ steps.env.outputs.RELEASE_REPO}}"
